{"version":3,"sources":["../src/vhtml.js","../src/empty-tags.js"],"names":["h","name","attrs","stack","s","i","arguments","length","push","children","reverse","setInnerHTMLAttr","DOMAttributeNames","esc","emptyTags","indexOf","__html","child","pop","sanitized","str","String","replace","map","&","<",">","\"","'"],"mappings":"gLAcA,SAAwBA,GAAEC,EAAMC,MAC3BC,MAAUC,EAAI,KACVF,UACH,GAAIG,GAAEC,UAAUC,OAAQF,KAAM,KAC5BG,KAAKF,UAAUD,OAIJ,kBAAPJ,YACJQ,SAAWN,EAAMO,UAChBT,EAAKC,MAITD,EAAM,OACJ,IAAMA,EACPC,EAAO,IAAK,GAAIG,KAAKH,IACT,IAAXA,EAAMG,IAAwB,MAAVH,EAAMG,IAAYA,IAAMM,YACtCC,EAAkBP,GAAKO,EAAkBP,GAAKQ,EAAIR,IAA3D,KAAkEQ,EAAIX,EAAMG,IAA5E,QAGG,QAG2B,IAA7BS,EAAUC,QAAQd,GAAc,IAC/BC,EAAMS,MACJT,EAAMS,GAAkBK,WAEzB,MAAOb,EAAMI,QAAQ,IACrBU,GAAQd,EAAMe,SACdD,KACCA,EAAMC,QACJ,GAAIb,GAAEY,EAAMV,OAAQF,OAAaG,KAAKS,EAAMZ,aAGzB,IAAnBc,EAAUF,GAAgBA,EAAQJ,EAAII,MAKzChB,EAAAA,KAAYA,EAAZ,IAAsB,YAGlBG,IAAK,EACRA,EC1DR,GAAAU,IACC,OACA,OACA,KACA,MACA,UACA,QACA,KACA,MACA,QACA,SACA,OACA,OACA,QACA,SACA,QACA,ODbGD,EAAM,SAAAO,SAAOC,QAAOD,GAAKE,QAAQ,WAAY,SAAAlB,aAAOmB,EAAInB,GAAX,OAC7CmB,GAAOC,IAAI,MAAMC,IAAI,KAAKC,IAAI,KAAKC,IAAI,OAAOC,IAAI,QAClDjB,EAAmB,0BACnBC,aACQ,gBACF,OAGNO","file":"vhtml.min.js","sourcesContent":["import emptyTags from './empty-tags';\n\n// escape an attribute\nlet esc = str => String(str).replace(/[&<>\"']/g, s=>`&${map[s]};`);\nlet map = {'&':'amp','<':'lt','>':'gt','\"':'quot',\"'\":'apos'};\nlet setInnerHTMLAttr = 'dangerouslySetInnerHTML';\nlet DOMAttributeNames = {\n\tclassName: 'class',\n\thtmlFor: 'for'\n};\n\nlet sanitized = {};\n\n/** Hyperscript reviver that constructs a sanitized HTML string. */\nexport default function h(name, attrs) {\n\tlet stack=[], s = '';\n\tattrs = attrs || {};\n\tfor (let i=arguments.length; i-- > 2; ) {\n\t\tstack.push(arguments[i]);\n\t}\n\n\t// Sortof component support!\n\tif (typeof name==='function') {\n\t\tattrs.children = stack.reverse();\n\t\treturn name(attrs);\n\t\t// return name(attrs, stack.reverse());\n\t}\n\n\tif (name) {\n\t\ts += '<' + name;\n\t\tif (attrs) for (let i in attrs) {\n\t\t\tif (attrs[i]!==false && attrs[i]!=null && i !== setInnerHTMLAttr) {\n\t\t\t\ts += ` ${DOMAttributeNames[i] ? DOMAttributeNames[i] : esc(i)}=\"${esc(attrs[i])}\"`;\n\t\t\t}\n\t\t}\n\t\ts += '>';\n\t}\n\n\tif (emptyTags.indexOf(name) === -1) {\n\t\tif (attrs[setInnerHTMLAttr]) {\n\t\t\ts += attrs[setInnerHTMLAttr].__html;\n\t\t}\n\t\telse while (stack.length) {\n\t\t\tlet child = stack.pop();\n\t\t\tif (child) {\n\t\t\t\tif (child.pop) {\n\t\t\t\t\tfor (let i=child.length; i--; ) stack.push(child[i]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ts += sanitized[child]===true ? child : esc(child);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ts += name ? `</${name}>` : '';\n\t}\n\n\tsanitized[s] = true;\n\treturn s;\n}\n","export default [\n\t'area',\n\t'base',\n\t'br',\n\t'col',\n\t'command',\n\t'embed',\n\t'hr',\n\t'img',\n\t'input',\n\t'keygen',\n\t'link',\n\t'meta',\n\t'param',\n\t'source',\n\t'track',\n\t'wbr'\n];"]}